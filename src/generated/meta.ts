// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "jellydn";
export const name = "find-it-faster";
export const version = "0.4.0";
export const displayName = "FindItFaster";
export const description = "Find it, but faster! Leveraging fzf and rg.";
export const extensionId = `${publisher}.${name}`;

/**
 * Type union of all commands
 */
export type CommandKey =
	| "find-it-faster.findFiles"
	| "find-it-faster.findFilesWithType"
	| "find-it-faster.findWithinFiles"
	| "find-it-faster.findWithinFilesWithType"
	| "find-it-faster.resumeSearch"
	| "find-it-faster.pickFileFromGitStatus"
	| "find-it-faster.findTodoFixme"
	| "find-it-faster.runCustomTask";

/**
 * Commands map registed by `jellydn.find-it-faster`
 */
export const commands = {
	/**
	 * Find It Faster: search file
	 * @value `find-it-faster.findFiles`
	 */
	findFiles: "find-it-faster.findFiles",
	/**
	 * Find It Faster: search file (with type filter)
	 * @value `find-it-faster.findFilesWithType`
	 */
	findFilesWithType: "find-it-faster.findFilesWithType",
	/**
	 * Find It Faster: search within files
	 * @value `find-it-faster.findWithinFiles`
	 */
	findWithinFiles: "find-it-faster.findWithinFiles",
	/**
	 * Find It Faster: search within files (with type filter)
	 * @value `find-it-faster.findWithinFilesWithType`
	 */
	findWithinFilesWithType: "find-it-faster.findWithinFilesWithType",
	/**
	 * Find It Faster: resume last search
	 * @value `find-it-faster.resumeSearch`
	 */
	resumeSearch: "find-it-faster.resumeSearch",
	/**
	 * Find It Faster: Pick file from git status
	 * @value `find-it-faster.pickFileFromGitStatus`
	 */
	pickFileFromGitStatus: "find-it-faster.pickFileFromGitStatus",
	/**
	 * Find It Faster: Find TODO/FIXME comments
	 * @value `find-it-faster.findTodoFixme`
	 */
	findTodoFixme: "find-it-faster.findTodoFixme",
	/**
	 * Find It Faster: Run Custom Task
	 * @value `find-it-faster.runCustomTask`
	 */
	runCustomTask: "find-it-faster.runCustomTask",
} satisfies Record<string, CommandKey>;

/**
 * Type union of all configs
 */
export type ConfigKey =
	| "find-it-faster.general.useGitIgnoreExcludes"
	| "find-it-faster.general.useWorkspaceSearchExcludes"
	| "find-it-faster.general.additionalSearchLocations"
	| "find-it-faster.general.additionalSearchLocationsWhen"
	| "find-it-faster.general.searchWorkspaceFolders"
	| "find-it-faster.general.searchCurrentWorkingDirectory"
	| "find-it-faster.general.batTheme"
	| "find-it-faster.general.openFileInPreviewEditor"
	| "find-it-faster.findFiles.showPreview"
	| "find-it-faster.findFiles.previewCommand"
	| "find-it-faster.findFiles.previewWindowConfig"
	| "find-it-faster.findWithinFiles.showPreview"
	| "find-it-faster.findWithinFiles.previewCommand"
	| "find-it-faster.findWithinFiles.previewWindowConfig"
	| "find-it-faster.findWithinFiles.fuzzRipgrepQuery"
	| "find-it-faster.advanced.useEditorSelectionAsQuery"
	| "find-it-faster.general.restoreFocusTerminal"
	| "find-it-faster.general.useTerminalInEditor"
	| "find-it-faster.general.shellPathForTerminal"
	| "find-it-faster.pickFileFromGitStatus.showPreview"
	| "find-it-faster.pickFileFromGitStatus.previewCommand"
	| "find-it-faster.pickFileFromGitStatus.previewWindowConfig"
	| "find-it-faster.findTodoFixme.previewEnabled"
	| "find-it-faster.findTodoFixme.previewCommand"
	| "find-it-faster.findTodoFixme.previewWindowConfig"
	| "find-it-faster.findTodoFixme.searchPattern"
	| "find-it-faster.customTasks"
	| "find-it-faster.general.openCommand";

export interface ConfigKeyTypeMap {
	"find-it-faster.general.useGitIgnoreExcludes": boolean;
	"find-it-faster.general.useWorkspaceSearchExcludes": boolean;
	"find-it-faster.general.additionalSearchLocations": unknown[];
	"find-it-faster.general.additionalSearchLocationsWhen":
		| "always"
		| "never"
		| "noWorkspaceOnly";
	"find-it-faster.general.searchWorkspaceFolders": boolean;
	"find-it-faster.general.searchCurrentWorkingDirectory":
		| "always"
		| "never"
		| "noWorkspaceOnly";
	"find-it-faster.general.batTheme": string;
	"find-it-faster.general.openFileInPreviewEditor": boolean;
	"find-it-faster.findFiles.showPreview": boolean;
	"find-it-faster.findFiles.previewCommand": string;
	"find-it-faster.findFiles.previewWindowConfig": string;
	"find-it-faster.findWithinFiles.showPreview": boolean;
	"find-it-faster.findWithinFiles.previewCommand": string;
	"find-it-faster.findWithinFiles.previewWindowConfig": string;
	"find-it-faster.findWithinFiles.fuzzRipgrepQuery": boolean;
	"find-it-faster.advanced.useEditorSelectionAsQuery": boolean;
	"find-it-faster.general.restoreFocusTerminal": boolean;
	"find-it-faster.general.useTerminalInEditor": boolean;
	"find-it-faster.general.shellPathForTerminal": string;
	"find-it-faster.pickFileFromGitStatus.showPreview": boolean;
	"find-it-faster.pickFileFromGitStatus.previewCommand": string;
	"find-it-faster.pickFileFromGitStatus.previewWindowConfig": string;
	"find-it-faster.findTodoFixme.previewEnabled": boolean;
	"find-it-faster.findTodoFixme.previewCommand": string;
	"find-it-faster.findTodoFixme.previewWindowConfig": string;
	"find-it-faster.findTodoFixme.searchPattern": string;
	"find-it-faster.customTasks": { name: string; command: string }[];
	"find-it-faster.general.openCommand": string;
}

export interface ConfigShorthandMap {
	generalUseGitIgnoreExcludes: "find-it-faster.general.useGitIgnoreExcludes";
	generalUseWorkspaceSearchExcludes: "find-it-faster.general.useWorkspaceSearchExcludes";
	generalAdditionalSearchLocations: "find-it-faster.general.additionalSearchLocations";
	generalAdditionalSearchLocationsWhen: "find-it-faster.general.additionalSearchLocationsWhen";
	generalSearchWorkspaceFolders: "find-it-faster.general.searchWorkspaceFolders";
	generalSearchCurrentWorkingDirectory: "find-it-faster.general.searchCurrentWorkingDirectory";
	generalBatTheme: "find-it-faster.general.batTheme";
	generalOpenFileInPreviewEditor: "find-it-faster.general.openFileInPreviewEditor";
	findFilesShowPreview: "find-it-faster.findFiles.showPreview";
	findFilesPreviewCommand: "find-it-faster.findFiles.previewCommand";
	findFilesPreviewWindowConfig: "find-it-faster.findFiles.previewWindowConfig";
	findWithinFilesShowPreview: "find-it-faster.findWithinFiles.showPreview";
	findWithinFilesPreviewCommand: "find-it-faster.findWithinFiles.previewCommand";
	findWithinFilesPreviewWindowConfig: "find-it-faster.findWithinFiles.previewWindowConfig";
	findWithinFilesFuzzRipgrepQuery: "find-it-faster.findWithinFiles.fuzzRipgrepQuery";
	advancedUseEditorSelectionAsQuery: "find-it-faster.advanced.useEditorSelectionAsQuery";
	generalRestoreFocusTerminal: "find-it-faster.general.restoreFocusTerminal";
	generalUseTerminalInEditor: "find-it-faster.general.useTerminalInEditor";
	generalShellPathForTerminal: "find-it-faster.general.shellPathForTerminal";
	pickFileFromGitStatusShowPreview: "find-it-faster.pickFileFromGitStatus.showPreview";
	pickFileFromGitStatusPreviewCommand: "find-it-faster.pickFileFromGitStatus.previewCommand";
	pickFileFromGitStatusPreviewWindowConfig: "find-it-faster.pickFileFromGitStatus.previewWindowConfig";
	findTodoFixmePreviewEnabled: "find-it-faster.findTodoFixme.previewEnabled";
	findTodoFixmePreviewCommand: "find-it-faster.findTodoFixme.previewCommand";
	findTodoFixmePreviewWindowConfig: "find-it-faster.findTodoFixme.previewWindowConfig";
	findTodoFixmeSearchPattern: "find-it-faster.findTodoFixme.searchPattern";
	customTasks: "find-it-faster.customTasks";
	generalOpenCommand: "find-it-faster.general.openCommand";
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
	key: T;
	default: ConfigKeyTypeMap[T];
}

/**
 * Configs map registed by `jellydn.find-it-faster`
 */
export const configs = {
	/**
	 *
	 * @key `find-it-faster.general.useGitIgnoreExcludes`
	 * @default `true`
	 * @type `boolean`
	 */
	generalUseGitIgnoreExcludes: {
		key: "find-it-faster.general.useGitIgnoreExcludes",
		default: true,
	} as ConfigItem<"find-it-faster.general.useGitIgnoreExcludes">,
	/**
	 *
	 * @key `find-it-faster.general.useWorkspaceSearchExcludes`
	 * @default `true`
	 * @type `boolean`
	 */
	generalUseWorkspaceSearchExcludes: {
		key: "find-it-faster.general.useWorkspaceSearchExcludes",
		default: true,
	} as ConfigItem<"find-it-faster.general.useWorkspaceSearchExcludes">,
	/**
	 *
	 * @key `find-it-faster.general.additionalSearchLocations`
	 * @default `[]`
	 * @type `array`
	 */
	generalAdditionalSearchLocations: {
		key: "find-it-faster.general.additionalSearchLocations",
		default: [],
	} as ConfigItem<"find-it-faster.general.additionalSearchLocations">,
	/**
	 *
	 * @key `find-it-faster.general.additionalSearchLocationsWhen`
	 * @default `"always"`
	 * @type `string`
	 */
	generalAdditionalSearchLocationsWhen: {
		key: "find-it-faster.general.additionalSearchLocationsWhen",
		default: "always",
	} as ConfigItem<"find-it-faster.general.additionalSearchLocationsWhen">,
	/**
	 *
	 * @key `find-it-faster.general.searchWorkspaceFolders`
	 * @default `true`
	 * @type `boolean`
	 */
	generalSearchWorkspaceFolders: {
		key: "find-it-faster.general.searchWorkspaceFolders",
		default: true,
	} as ConfigItem<"find-it-faster.general.searchWorkspaceFolders">,
	/**
	 *
	 * @key `find-it-faster.general.searchCurrentWorkingDirectory`
	 * @default `"noWorkspaceOnly"`
	 * @type `string`
	 */
	generalSearchCurrentWorkingDirectory: {
		key: "find-it-faster.general.searchCurrentWorkingDirectory",
		default: "noWorkspaceOnly",
	} as ConfigItem<"find-it-faster.general.searchCurrentWorkingDirectory">,
	/**
	 *
	 * @key `find-it-faster.general.batTheme`
	 * @default `"1337"`
	 * @type `string`
	 */
	generalBatTheme: {
		key: "find-it-faster.general.batTheme",
		default: "1337",
	} as ConfigItem<"find-it-faster.general.batTheme">,
	/**
	 *
	 * @key `find-it-faster.general.openFileInPreviewEditor`
	 * @default `false`
	 * @type `boolean`
	 */
	generalOpenFileInPreviewEditor: {
		key: "find-it-faster.general.openFileInPreviewEditor",
		default: false,
	} as ConfigItem<"find-it-faster.general.openFileInPreviewEditor">,
	/**
	 *
	 * @key `find-it-faster.findFiles.showPreview`
	 * @default `true`
	 * @type `boolean`
	 */
	findFilesShowPreview: {
		key: "find-it-faster.findFiles.showPreview",
		default: true,
	} as ConfigItem<"find-it-faster.findFiles.showPreview">,
	/**
	 *
	 * @key `find-it-faster.findFiles.previewCommand`
	 * @default `""`
	 * @type `string`
	 */
	findFilesPreviewCommand: {
		key: "find-it-faster.findFiles.previewCommand",
		default: "",
	} as ConfigItem<"find-it-faster.findFiles.previewCommand">,
	/**
	 *
	 * @key `find-it-faster.findFiles.previewWindowConfig`
	 * @default `""`
	 * @type `string`
	 */
	findFilesPreviewWindowConfig: {
		key: "find-it-faster.findFiles.previewWindowConfig",
		default: "",
	} as ConfigItem<"find-it-faster.findFiles.previewWindowConfig">,
	/**
	 *
	 * @key `find-it-faster.findWithinFiles.showPreview`
	 * @default `true`
	 * @type `boolean`
	 */
	findWithinFilesShowPreview: {
		key: "find-it-faster.findWithinFiles.showPreview",
		default: true,
	} as ConfigItem<"find-it-faster.findWithinFiles.showPreview">,
	/**
	 *
	 * @key `find-it-faster.findWithinFiles.previewCommand`
	 * @default `""`
	 * @type `string`
	 */
	findWithinFilesPreviewCommand: {
		key: "find-it-faster.findWithinFiles.previewCommand",
		default: "",
	} as ConfigItem<"find-it-faster.findWithinFiles.previewCommand">,
	/**
	 *
	 * @key `find-it-faster.findWithinFiles.previewWindowConfig`
	 * @default `""`
	 * @type `string`
	 */
	findWithinFilesPreviewWindowConfig: {
		key: "find-it-faster.findWithinFiles.previewWindowConfig",
		default: "",
	} as ConfigItem<"find-it-faster.findWithinFiles.previewWindowConfig">,
	/**
	 *
	 * @key `find-it-faster.findWithinFiles.fuzzRipgrepQuery`
	 * @default `false`
	 * @type `boolean`
	 */
	findWithinFilesFuzzRipgrepQuery: {
		key: "find-it-faster.findWithinFiles.fuzzRipgrepQuery",
		default: false,
	} as ConfigItem<"find-it-faster.findWithinFiles.fuzzRipgrepQuery">,
	/**
	 *
	 * @key `find-it-faster.advanced.useEditorSelectionAsQuery`
	 * @default `true`
	 * @type `boolean`
	 */
	advancedUseEditorSelectionAsQuery: {
		key: "find-it-faster.advanced.useEditorSelectionAsQuery",
		default: true,
	} as ConfigItem<"find-it-faster.advanced.useEditorSelectionAsQuery">,
	/**
	 *
	 * @key `find-it-faster.general.restoreFocusTerminal`
	 * @default `false`
	 * @type `boolean`
	 */
	generalRestoreFocusTerminal: {
		key: "find-it-faster.general.restoreFocusTerminal",
		default: false,
	} as ConfigItem<"find-it-faster.general.restoreFocusTerminal">,
	/**
	 *
	 * @key `find-it-faster.general.useTerminalInEditor`
	 * @default `false`
	 * @type `boolean`
	 */
	generalUseTerminalInEditor: {
		key: "find-it-faster.general.useTerminalInEditor",
		default: false,
	} as ConfigItem<"find-it-faster.general.useTerminalInEditor">,
	/**
	 *
	 * @key `find-it-faster.general.shellPathForTerminal`
	 * @default `""`
	 * @type `string`
	 */
	generalShellPathForTerminal: {
		key: "find-it-faster.general.shellPathForTerminal",
		default: "",
	} as ConfigItem<"find-it-faster.general.shellPathForTerminal">,
	/**
	 *
	 * @key `find-it-faster.pickFileFromGitStatus.showPreview`
	 * @default `true`
	 * @type `boolean`
	 */
	pickFileFromGitStatusShowPreview: {
		key: "find-it-faster.pickFileFromGitStatus.showPreview",
		default: true,
	} as ConfigItem<"find-it-faster.pickFileFromGitStatus.showPreview">,
	/**
	 *
	 * @key `find-it-faster.pickFileFromGitStatus.previewCommand`
	 * @default `""`
	 * @type `string`
	 */
	pickFileFromGitStatusPreviewCommand: {
		key: "find-it-faster.pickFileFromGitStatus.previewCommand",
		default: "",
	} as ConfigItem<"find-it-faster.pickFileFromGitStatus.previewCommand">,
	/**
	 *
	 * @key `find-it-faster.pickFileFromGitStatus.previewWindowConfig`
	 * @default `""`
	 * @type `string`
	 */
	pickFileFromGitStatusPreviewWindowConfig: {
		key: "find-it-faster.pickFileFromGitStatus.previewWindowConfig",
		default: "",
	} as ConfigItem<"find-it-faster.pickFileFromGitStatus.previewWindowConfig">,
	/**
	 * Enable preview for TODO/FIXME search results
	 * @key `find-it-faster.findTodoFixme.previewEnabled`
	 * @default `true`
	 * @type `boolean`
	 */
	findTodoFixmePreviewEnabled: {
		key: "find-it-faster.findTodoFixme.previewEnabled",
		default: true,
	} as ConfigItem<"find-it-faster.findTodoFixme.previewEnabled">,
	/**
	 * Preview command for TODO/FIXME search results
	 * @key `find-it-faster.findTodoFixme.previewCommand`
	 * @default `"bat --decorations=always --color=always {1} --highlight-line {2} --style=header,grid"`
	 * @type `string`
	 */
	findTodoFixmePreviewCommand: {
		key: "find-it-faster.findTodoFixme.previewCommand",
		default:
			"bat --decorations=always --color=always {1} --highlight-line {2} --style=header,grid",
	} as ConfigItem<"find-it-faster.findTodoFixme.previewCommand">,
	/**
	 * Preview window configuration for TODO/FIXME search results
	 * @key `find-it-faster.findTodoFixme.previewWindowConfig`
	 * @default `"right:border-left:50%:+{2}+3/3:~3"`
	 * @type `string`
	 */
	findTodoFixmePreviewWindowConfig: {
		key: "find-it-faster.findTodoFixme.previewWindowConfig",
		default: "right:border-left:50%:+{2}+3/3:~3",
	} as ConfigItem<"find-it-faster.findTodoFixme.previewWindowConfig">,
	/**
	 * Regular expression pattern for searching TODO/FIXME/HACK comments. Matches keywords followed by a colon and optional space.
	 * @key `find-it-faster.findTodoFixme.searchPattern`
	 * @default `"(TODO|FIXME|HACK|FIX):\\s"`
	 * @type `string`
	 */
	findTodoFixmeSearchPattern: {
		key: "find-it-faster.findTodoFixme.searchPattern",
		default: "(TODO|FIXME|HACK|FIX):\\s",
	} as ConfigItem<"find-it-faster.findTodoFixme.searchPattern">,
	/**
	 * Custom tasks that can be executed by the extension
	 * @key `find-it-faster.customTasks`
	 * @default `[{"name":"zoxide","command":"code $(zoxide query --interactive)"}]`
	 * @type `array`
	 */
	customTasks: {
		key: "find-it-faster.customTasks",
		default: [
			{ name: "zoxide", command: "code $(zoxide query --interactive)" },
		],
	} as ConfigItem<"find-it-faster.customTasks">,
	/**
	 * CLI command to open files. Use 'code' for VS Code, 'cursor' for Cursor, or any other custom command.
	 * @key `find-it-faster.general.openCommand`
	 * @default `"code -g"`
	 * @type `string`
	 */
	generalOpenCommand: {
		key: "find-it-faster.general.openCommand",
		default: "code -g",
	} as ConfigItem<"find-it-faster.general.openCommand">,
};

export interface ScopedConfigKeyTypeMap {
	"general.useGitIgnoreExcludes": boolean;
	"general.useWorkspaceSearchExcludes": boolean;
	"general.additionalSearchLocations": unknown[];
	"general.additionalSearchLocationsWhen":
		| "always"
		| "never"
		| "noWorkspaceOnly";
	"general.searchWorkspaceFolders": boolean;
	"general.searchCurrentWorkingDirectory":
		| "always"
		| "never"
		| "noWorkspaceOnly";
	"general.batTheme": string;
	"general.openFileInPreviewEditor": boolean;
	"findFiles.showPreview": boolean;
	"findFiles.previewCommand": string;
	"findFiles.previewWindowConfig": string;
	"findWithinFiles.showPreview": boolean;
	"findWithinFiles.previewCommand": string;
	"findWithinFiles.previewWindowConfig": string;
	"findWithinFiles.fuzzRipgrepQuery": boolean;
	"advanced.useEditorSelectionAsQuery": boolean;
	"general.restoreFocusTerminal": boolean;
	"general.useTerminalInEditor": boolean;
	"general.shellPathForTerminal": string;
	"pickFileFromGitStatus.showPreview": boolean;
	"pickFileFromGitStatus.previewCommand": string;
	"pickFileFromGitStatus.previewWindowConfig": string;
	"findTodoFixme.previewEnabled": boolean;
	"findTodoFixme.previewCommand": string;
	"findTodoFixme.previewWindowConfig": string;
	"findTodoFixme.searchPattern": string;
	customTasks: { name: string; command: string }[];
	"general.openCommand": string;
}

export const scopedConfigs = {
	scope: "find-it-faster",
	defaults: {
		"general.useGitIgnoreExcludes": true,
		"general.useWorkspaceSearchExcludes": true,
		"general.additionalSearchLocations": [],
		"general.additionalSearchLocationsWhen": "always",
		"general.searchWorkspaceFolders": true,
		"general.searchCurrentWorkingDirectory": "noWorkspaceOnly",
		"general.batTheme": "1337",
		"general.openFileInPreviewEditor": false,
		"findFiles.showPreview": true,
		"findFiles.previewCommand": "",
		"findFiles.previewWindowConfig": "",
		"findWithinFiles.showPreview": true,
		"findWithinFiles.previewCommand": "",
		"findWithinFiles.previewWindowConfig": "",
		"findWithinFiles.fuzzRipgrepQuery": false,
		"advanced.useEditorSelectionAsQuery": true,
		"general.restoreFocusTerminal": false,
		"general.useTerminalInEditor": false,
		"general.shellPathForTerminal": "",
		"pickFileFromGitStatus.showPreview": true,
		"pickFileFromGitStatus.previewCommand": "",
		"pickFileFromGitStatus.previewWindowConfig": "",
		"findTodoFixme.previewEnabled": true,
		"findTodoFixme.previewCommand":
			"bat --decorations=always --color=always {1} --highlight-line {2} --style=header,grid",
		"findTodoFixme.previewWindowConfig": "right:border-left:50%:+{2}+3/3:~3",
		"findTodoFixme.searchPattern": "(TODO|FIXME|HACK|FIX):\\s",
		customTasks: [
			{ name: "zoxide", command: "code $(zoxide query --interactive)" },
		],
		"general.openCommand": "code -g",
	} satisfies ScopedConfigKeyTypeMap,
};
